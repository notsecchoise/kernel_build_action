name: Build Merlin ALMK Kernel

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'device codename (e.g topaz/tissot)'
          required: true
      repo:
          description: 'Kernel source link (dont include . git at the end)'
          required: true
      branch:
          description: 'Kernel source branch'
          required: true
      token:
          description: 'Telegram bot token'
          required: true
      chat_id:
          description: 'Telegram chat id'
          required: true


env:
  TZ: Asia/Jakarta
  DEVICE: merlin-almk
  REPO: https://github.com/Soulvibe-Stuff/android_kernrl_xiaomi_mt6768.git
  BRANCH: Paradox-ALMK
  token: 6410284454:AAFHrE_XZtikh0v8L7IoDVr1RAMuno3LjeI
  chat_id: -1002088104319

jobs:
  kernel-build:
    runs-on: ubuntu-22.04

    steps:
      - name: Initializing environment
        run: |
          git config --global user.name "soulvibe-team"
          git config --global user.email "user@soulvibe.atlassian.net"
          df -h
          ld --version
          gcc -v
          ar --version
          sudo apt update
          sudo apt install -y bc bison build-essential ccache curl flex glibc-source g++-multilib gcc-multilib binutils-aarch64-linux-gnu git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python2 tmate ssh neofetch
          neofetch

      - name: Compiling
        run: |
          if [ "${DEVICE}" = "merlin-almk" ]; then
            wget https://raw.githubusercontent.com/notsecchoise/kernel_build_action/main/scripts/merlin_almk_build_script.sh
            bash merlin_almk_build_script.sh
          elif [ "${DEVICE}" = "merlin-slmk" ]; then
            wget https://raw.githubusercontent.com/notsecchoise/kernel_build_action/main/scripts/merlin_slmk_build_script.sh
            bash merlin_slmk_build_script.sh
          elif [ "${DEVICE}" = "lancelot-almk" ]; then 
            wget https://raw.githubusercontent.com/notsecchoise/kernel_build_action/main/scripts/lancelot_almk_build_script.sh
            bash lancelot_almk_build_script.sh
          elif [ "${DEVICE}" = "lancelot-slmk" ]; then
            wget https://raw.githubusercontent.com/notsecchoise/kernel_build_action/main/scripts/lancelot_slmk_build_script.sh
            bash lancelot_slmk_build_script.sh
          else
            echo "Device not supported yet"
          fi


